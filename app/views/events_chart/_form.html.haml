%h2 Customize Graph
= form_tag(events_chart_index_path, method: :post) do
  .form-group
    %label.control-label
      Grouping of Data
    .radio
      = label_tag do
        = radio_button_tag 'grouping', 'per_day', @controls[:grouping] == :per_day
        Per Day
    .radio
      = label_tag do
        = radio_button_tag 'grouping', 'total', @controls[:grouping] == :total
        Totals (no grouping)

  .form-group
    %label.control-label
      Desired Metric
    .radio
      = label_tag do
        = radio_button_tag :metric, :revenue, @controls[:metric] == :revenue
        Revenue
    .radio
      = label_tag do
        = radio_button_tag :metric, :sold_items, @controls[:metric] == :sold_items
        Number of Sold Items
    .radio
      = label_tag do
        = radio_button_tag :metric, :customers, @controls[:metric] == :customers
        Number of Customers

  .form-group
    = submit_tag 'View'

#chartrow.row
  #chart.with-3d-shadow.with-transitions
    %svg

:javascript

   var chart;
   nv.addGraph(function() {
       chart = nv.models.multiBarChart()
           .x(function(d) { return d.label; })
           .y(function(d) { return +d.value; })
           .duration(300)
           .margin({bottom: 100, left: 70})
           .rotateLabels(45)
           .groupSpacing(0.1)
       ;
       chart.reduceXTicks(false).staggerLabels(true);
       chart.xAxis
           .axisLabel("Days of the Week")
           .axisLabelDistance(35)
           .showMaxMin(false)
       ;
       chart.yAxis
           .axisLabel("Revenue")
           .axisLabelDistance(-5)
           .tickFormat(d3.format(',.01f'))
       ;
       chart.dispatch.on('renderEnd', function(){
           nv.log('Render Complete');
       });
       d3.select('#chart svg')
           .datum(gon.data)
           .call(chart);
       nv.utils.windowResize(chart.update);
       return chart;
   });
