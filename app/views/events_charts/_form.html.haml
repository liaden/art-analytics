
.container-fluid
  .row
    %nav#controls.col-sm-3.d-none.d-sm-block.sidebar.bg-light
      .sidebar-sticky
        .nav-link
          %h4 Customize Graph

        = simple_form_for(@controls, url: events_charts_path, wrapper: 'vertical_form') do |f|
          .form-group.nav-link.my-0.py-0.btn-group.btn-group-toggle{"data-toggle" => "buttons"}
            = f.input :grouping,
                as: :toggle_collection

          .form-group.nav-link.my-0.py-0
            = f.input :metric,
                as: :toggle_collection

          .form-group.nav-link.my-0.py-0
            = f.input :ordering,
                as: :toggle_collection

          .form-group.nav-link.my-0.py-0
            = f.input :date_after, as: :tempus_dominus, label: 'Start Date'
            = f.input :date_before, as: :tempus_dominus, label: 'End Date'

          .form-group.nav-link.my-0.py-0
            = f.submit 'View'

    %main#chart.ml-auto.col-sm-9{roll: :main}
      %svg

:javascript
   var chart;
   nv.addGraph(function() {
       chart = nv.models.multiBarChart()
           .x(function(d) { return d.label; })
           .y(function(d) { return +d.value; })
           .duration(300)
           .margin({bottom: 100, left: 70})
           .rotateLabels(45)
           .groupSpacing(0.1)
       ;
       chart.reduceXTicks(false).staggerLabels(true);
       chart.xAxis
           .axisLabel("Days of the Week")
           .axisLabelDistance(35)
           .showMaxMin(false)
       ;
       chart.yAxis
           .axisLabel("Revenue")
           .axisLabelDistance(-5)
           .tickFormat(d3.format(',.01f'))
       ;
       chart.dispatch.on('renderEnd', function(){
           nv.log('Render Complete');
       });
       d3.select('#chart svg')
           .datum(gon.data)
           .call(chart);
       nv.utils.windowResize(chart.update);
       return chart;
   });
